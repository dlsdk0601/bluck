// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  pk                            Int      @id @default(autoincrement())
  email                         String   @unique @db.VarChar(256)
  password                      String   @db.VarChar(256)
  name                          String   @db.VarChar(64)
  birthday                      DateTime @db.Date
  phone                         String   @db.VarChar(32)
  message                       String   @db.VarChar(256)
  introduce                     String   @db.Text
  main_image_pk                 Int      @db.Integer
  main_image                    asset    @relation(fields: [main_image_pk], references: [pk])
  is_personal_information_agree Boolean

  created_at DateTime    @default(now())
  updated_at DateTime    @updatedAt
  blog       blog[]
  blog_view  blog_view[]
  blog_like  blog_like[]
}

model asset {
  pk           Int    @id @default(autoincrement())
  name         String @db.VarChar(64)
  content_type String @db.VarChar(64)
  uuid         String @db.Uuid
  url          String @db.VarChar(256)
  download_url String @db.VarChar(256)
  user         user[]
  blog         blog[]
}

model tag {
  pk       Int        @id @default(autoincrement())
  name     String     @db.VarChar(64)
  blog_tag blog_tag[]
}

model blog {
  pk         Int       @id @default(autoincrement())
  title      String    @db.VarChar(256)
  body       String    @db.Text
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  deleted_at DateTime?

  banner_image_pk Int   @db.Integer
  banner_image    asset @relation(fields: [banner_image_pk], references: [pk])
  user_pk         Int   @db.Integer
  user            user  @relation(fields: [user_pk], references: [pk])

  tags      blog_tag[]
  blog_view blog_view[]
  blog_like blog_like[]
}

model blog_tag {
  tag_pk  Int
  tag     tag  @relation(fields: [tag_pk], references: [pk])
  blog_pk Int
  blog    blog @relation(fields: [blog_pk], references: [pk])

  @@id([blog_pk, tag_pk])
}

model blog_view {
  blog_pk Int  @db.Integer
  blog    blog @relation(fields: [blog_pk], references: [pk])
  user_pk Int  @db.Integer
  user    user @relation(fields: [user_pk], references: [pk])

  @@id([blog_pk, user_pk])
}

model blog_like {
  blog_pk Int  @db.Integer
  blog    blog @relation(fields: [blog_pk], references: [pk])
  user_pk Int  @db.Integer
  user    user @relation(fields: [user_pk], references: [pk])

  @@id([blog_pk, user_pk])
}
